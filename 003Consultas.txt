db.clientes.find();
//este consulta lo que hace es selecciona a los que se llama david where
db.clientes.find({"nombre":"david"});
// selecionar por apellidos
db.clientes.find({"apellidos":"gomez"});
//seleccion multiple
db.clientes.find({"nombre":"david","apellidos":"gomez"});
db.clientes.find({});
db.clientes.find({},{nombre:1});
db.clientes.find({},{nombre:1,_id:0});
db.clientes.find({},{_id:0});
db.clientes.find({$and:[{"nombre":"david"},{"apellidos":"gomez"}]}) 
db.clientes.find({$or:[{"nombre":"david"},{"apellidos":"gomez"}]}) 
db.clientes.find({},{apellidos:1,_id:0});
db.clientes.distinct("apellidos");
db.clientes.countDocuments();
//igualdad no igualdad
db.clientes.find({apellidos:{$eq:"martinez"}});
db.clientes.find({apellidos:{$ne:"martinez"}});
// queremos sacar la lista de clientes que se apelliden gomez o martinez
db.clientes.find({apellidos:"martinez"});
db.clientes.find({apellidos:"gomez"});
// combina con un or
db.clientes.find({$or:[{apellidos:{$eq:"martinez"}},{apellidos:{$eq:"gomez"}}]})
//los mayores
db.clientes.find({edad:{$gt:20}});
db.clientes.find({edad:{$lt:20}});
//clausula between
db.clientes.find ({edad:{$gt:20,$lt:50}});
db.clientes.find({edad:{$gte:20}});
db.clientes.find({edad:{$lte:20}});
db.clientes.countDocuments({edad:{$lte:20}});
db.clientes.find({apellidos:{$exists:false}})
db.clientes.find({apellidos:null})
db.clientes.insertOne({"nombre":"juan",apellidos:null});
db.clientes.find({nombre:{$in:["juan","ana"]}});
db.clientes.find({nombre:{$nin:["juan","ana"]}});
db.clientes.find({$or:[{apellidos:{$eq:"martinez"}},{apellidos:{$eq:"gomez"}}]},{nombre:1,apellidos:1,_id:0})
db.clientes.find({$nor:[{apellidos:{$eq:"martinez"}},{apellidos:{$eq:"gomez"}}]},{nombre:1,apellidos:1,_id:0})
db.clientes.find({$and:[{"nombre":"david"},{"apellidos":"gomez"}]},{nombre:1,apellidos:1,_id:0}) 
db.clientes.find( {nombre : {$not:{$and:[{"nombre":"david"},{"apellidos":"gomez"}]}}},{nombre:1,apellidos:1,_id:0}) 
db.clientes.find( {nombre : {$not:{$eq:"david"}}}); 
//estoy combinando el decir oye el el "nombre" no sea david pero no puedo decir que el apellidos gomez
db.clientes.find( {nombre : {$not:{$in:["juan","ana"]}}}); 
db.clientes.find({$nor:[{nombre:"juan"},{nombre:"ana"},{apellidos:"alvarez"}]});
db.clientes.find({nombre:{$regex:"ana"}})
db.clientes.find({nombre:{$regex:/ana/}},{nombre:1,apellidos:1});
db.clientes.find({nombre:{$regex://}},{nombre:1,apellidos:1});
db.clientes.find({nombre:{$regex:/pedro.david/}},{nombre:1,apellidos:1});
db.clientes.find({dni:{$regex:/\d{2}/}},{nombre:1,apellidos:1,dni:1,_id:0});
db.clientes.find({dni:{$regex:/^[12]/}},{nombre:1,apellidos:1,dni:1,_id:0});
db.clientes.find({dni:{$regex:/^12/}},{nombre:1,apellidos:1,dni:1,_id:0});
db.clientes.find({apellidos:{$regex:/ez$/}},{nombre:1,apellidos:1,dni:1,_id:0});
db.clientes.find({apellidos:/ez$/},{nombre:1,apellidos:1,dni:1,_id:0});
db.clientes.find({apellidos:{$regex:/^g..ez$/}},{nombre:1,apellidos:1,dni:1,_id:0});
db.clientes.find({dni:{$regex:/^\d{3}/}},{nombre:1,apellidos:1,dni:1,_id:0});
db.clientes.find({dni:{$regex:/[AB]$/}},{nombre:1,apellidos:1,dni:1,_id:0});

// insertar dos ordenadores mas a la coleccion desde la consola
// sacar los ordenadores que tienen un importe de mas de 2000 euros
// obtener los ordenadores que sean sobremesa  y tengan 32 gigas de ram
// contar todos los ordenadors mayores de 1500 euros
 db.ordenadores.find({"marca":"Lenovo"});
 db.ordenadores.update({"marca":"Lenovo"},{"$set":{color:"azul"}});
db.ordenadores.update({"marca":"Dell"},{"$set":{color:"rojo"}});
db.ordenadores.update({"marca":"Sansumg"},{"$set":{color:"verde"}});
db.ordenadores.update({"marca":"HP"},{"$set":{color:"negro"}});
/////////////
 db.ordenadores.update({"marca":"Lenovo"},{"$set":{discos:["1TB-SDD","4TB-HD"]}});
db.ordenadores.update({"marca":"HP"},{"$set":{discos:["2TB-SDD","8TB-HD"]}});



db.ordenadores.find({discos:"1TB-SDD"},{discos:1,_id:0});
db.ordenadores.find({discos:"1TB-SDD"},{discos:1,_id:0,modelo:1});
 db.ordenadores.update({"marca":"Sansumg"},{"$set":{discos:["1TB-SDD","8TB-HD"]}});
 //filtro por una doble restriccion que me permite localizar los dos
 db.ordenadores.find({discos:{$all:["1TB-SDD","8TB-HD"]}},{discos:1,_id:0,modelo:1});
 db.ordenadores.update({"marca":"Dell"},{"$set":{discos:["8TB-HD","1TB-SDD"]}});
db.ordenadores.find({discos:["1TB-SDD","8TB-HD"]},{discos:1,_id:0,modelo:1});
db.ordenadores.find({discos:{$all:["1TB-SDD","8TB-HD"]}},{discos:1,_id:0,modelo:1});
db.ordenadores.find({$or:[{discos:"1TB-SDD"},{discos:"8TB-HD"}]},{discos:1,_id:0,modelo:1});

 db.ordenadores.update({"marca":"Sansumg"},{"$set":{monitor:{pulgadas:20, gama:"gaming"}}});
 db.ordenadores.update({"marca":"Lenovo"},{"$set":{monitor:{pulgadas:30, gama:"office"}}});
  db.ordenadores.update({"marca":"HP"},{"$set":{monitor:{pulgadas:24, gama:"office"}}});
  db.ordenadores.find({},{marca:1,monitor:1,_id:0});
  db.ordenadores.find({},{marca:1,"monitor.pulgadas":1,_id:0});
  db.ordenadores.find({"monitor.pulgadas":30},{marca:1,"monitor.pulgadas":1,_id:0});
  db.clientes.find({edad:{$gt:20}});
db.ordenadores.find({"monitor.pulgadas":{$gte:24}},{marca:1,"monitor.pulgadas":1,_id:0});

///////////
db.ordenadores.find().limit(2);
db.ordenadores.find().skip(1).limit(2);
db.ordenadores.find().sort(modelo:-1).skip(1).limit(2);
db.ordenadores.find().sort({modelo:-1});
db.ordenadores.find().sort({modelo:1});

db.ordenadores.find().sort({modelo:1}).skip(2).limit(1);

// añadir dos ordenadores mas a la lista desde la consola
// segundo realizar una consulta que nos ordene los ordenadores por tamaño de monitor
// del mas pequeño al mas grande
 db.ordenadores.update({"modelo":"modelito"},{"$set":{monitor:{pulgadas:30, gama:"office"}}});